---
- block:
  - name: Install nginx
    apt:
      name: nginx
      force_apt_get: true
      state: present
      install_recommends: false

  - name: Load variables
    include_vars:
      file: nginx.yml

  - name: Setup basic nginx config
    template:
      src: files/nginx.conf.j2
      dest: /etc/nginx/nginx.conf
      owner: root
      group: root
      mode: 0644

  - name: Copy dhparams
    copy:
      src: files/dhparams.4096.pem
      dest: /etc/nginx/dhparams.pem
      owner: www-data
      group: www-data
      mode: 0400

  - name: Setup certificates
    copy:
      src: '{{ item.src }}'
      dest: '/etc/nginx/{{ item.type }}.pem'
      owner: www-data
      group: www-data
      mode: '{{ "444" if item.type == "cert" else "400" }}'
    with_items: '{{ nginx_certs }}'

  - name: Setup nginx mimetypes config
    copy:
      src: files/mime.types
      dest: /etc/nginx/mime.types
      owner: root
      group: root
      mode: 0644

  - name: Remove default config
    file:
      dest: '/etc/nginx/{{ item }}'
      state: absent
    with_items:
      - conf.d
      - fastcgi_params
      - fastcgi.conf
      - koi-utf
      - koi-win
      - proxy-params
      - scgi_params
      - snippets
      - uwsgi_params
      - win-utf

  - name: Setup virtual servers
    template:
      src: 'files/{{ item.template if item.template is defined else item.name }}.j2'
      dest: '/etc/nginx/sites-available/{{ item.name }}'
      owner: root
      group: root
      mode: 0644
    with_items: '{{ nginx_sites }}'

  - name: Enable virtual servers
    file:
      src: '../sites-available/{{ item.name }}'
      dest: '/etc/nginx/sites-enabled/{{ item.name }}'
      state: link
    with_items: '{{ nginx_sites }}'

  - name: Set systemd to autorestart mode if network is not ready
    copy:
      src: files/nginx.service
      dest: /etc/systemd/system/nginx.service
      owner: root
      group: root
      mode: 0644

  tags: nginx
  notify: Restart nginx
